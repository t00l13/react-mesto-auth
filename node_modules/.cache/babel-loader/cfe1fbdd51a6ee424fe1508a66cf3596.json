{"ast":null,"code":"import _classCallCheck from\"/Users/toolie/dev/mesto-react/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/toolie/dev/mesto-react/node_modules/@babel/runtime/helpers/esm/createClass.js\";//     КЛАСС ДЛЯ ОТПРАВКИ ЗАПРОСОВ НА СЕРВЕР\nvar Api=/*#__PURE__*/function(){function Api(_ref){var baseUrl=_ref.baseUrl,headers=_ref.headers;_classCallCheck(this,Api);this._baseUrl=baseUrl;this._userUrl=\"\".concat(this._baseUrl,\"/users/me\");this._cardsUrl=\"\".concat(this._baseUrl,\"/cards\");this._likesUrl=\"\".concat(this._baseUrl,\"/cards/likes\");this._token=headers['authorization'];}_createClass(Api,[{key:\"_handleResponse\",value:function _handleResponse(res){if(res.ok){return res.json();}return Promise.reject(\"\\u0427\\u0442\\u043E-\\u0442\\u043E \\u043D\\u0435 \\u0442\\u0430\\u043A, \\u043E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));}//--- МЕТОД ПОЛУЧЕНИЯ ИНФОРМАЦИИ ПОЛЬЗОВАТЕЛЯ\n},{key:\"getUserData\",value:function getUserData(){return fetch(this._userUrl,{headers:{authorization:this._token}}).then(this._handleResponse);}//--- МЕТОД СОХРАНЕНИЯ ИНФОРМАЦИИ ИНФОРМАЦИИ ПОЛЬЗОВАТЕЛЯ\n},{key:\"saveUserChanges\",value:function saveUserChanges(_ref2){var name=_ref2.name,about=_ref2.about;return fetch(this._userUrl,{method:'PATCH',headers:{authorization:this._token,'Content-Type':'application/json'},body:JSON.stringify({name:name,about:about})}).then(this._handleResponse);}//--- МЕТОД СМЕНЫ АВАТАРА ПОЛЬЗОВАТЕЛЯ\n},{key:\"changeAvatar\",value:function changeAvatar(src){return fetch(\"\".concat(this._userUrl,\"/avatar\"),{method:'PATCH',headers:{authorization:this._token,'Content-Type':'application/json'},body:JSON.stringify({avatar:src})}).then(this._handleResponse);}//--- МЕТОД ПОЛУЧЕНИЯ КАРТОЧЕК С СЕРВЕРА\n},{key:\"getInitialCards\",value:function getInitialCards(){return fetch(this._cardsUrl,{headers:{authorization:this._token}}).then(this._handleResponse);}//--- МЕТОД ПУБЛИКАЦИИ НОВОЙ КАРТОЧКИ \n},{key:\"postNewCard\",value:function postNewCard(_ref3){var name=_ref3.name,link=_ref3.link;return fetch(this._cardsUrl,{method:'POST',headers:{authorization:this._token,'Content-Type':'application/json'},body:JSON.stringify({name:name,link:link})}).then(this._handleResponse);}//--- МЕТОД УДАЛЕНИЕ КАРТОЧКИ\n},{key:\"deleteCard\",value:function deleteCard(cardId){return fetch(\"\".concat(this._cardsUrl,\"/\").concat(cardId),{method:'DELETE',headers:{authorization:this._token}}).then(this._handleResponse);}//--- МЕТОД ЛАЙКА КАРТОЧКИ\n},{key:\"changeLikeCardStatus\",value:function changeLikeCardStatus(cardId,isNotLiked){return fetch(\"\".concat(this._likesUrl,\"/\").concat(cardId),{method:isNotLiked?'PUT':'DELETE',headers:{authorization:this._token}}).then(this._handleResponse);}}]);return Api;}();var api=new Api({baseUrl:'https://mesto.nomoreparties.co/v1/cohort-45',headers:{authorization:'fcd67938-a1e9-408c-8c74-faa990c9d125','Content-Type':'application/json'}});export default api;","map":{"version":3,"names":["Api","baseUrl","headers","_baseUrl","_userUrl","_cardsUrl","_likesUrl","_token","res","ok","json","Promise","reject","status","fetch","authorization","then","_handleResponse","name","about","method","body","JSON","stringify","src","avatar","link","cardId","isNotLiked","api"],"sources":["/Users/toolie/dev/mesto-react/src/utils/api.js"],"sourcesContent":["//     КЛАСС ДЛЯ ОТПРАВКИ ЗАПРОСОВ НА СЕРВЕР\n class Api {\n    constructor({ baseUrl, headers}) {\n        this._baseUrl = baseUrl;\n        this._userUrl = `${this._baseUrl}/users/me`;\n        this._cardsUrl = `${this._baseUrl}/cards`;\n        this._likesUrl = `${this._baseUrl}/cards/likes`;\n        this._token = headers['authorization'];\n    }\n\n    _handleResponse (res) {\n        if(res.ok) {\n            return res.json();\n        }\n        return Promise.reject(`Что-то не так, ошибка: ${res.status}`);\n    }\n    //--- МЕТОД ПОЛУЧЕНИЯ ИНФОРМАЦИИ ПОЛЬЗОВАТЕЛЯ\n    getUserData(){\n        return fetch(this._userUrl, {\n            headers: {\n                authorization: this._token,\n            }\n        })\n        .then( this._handleResponse)\n    }\n    //--- МЕТОД СОХРАНЕНИЯ ИНФОРМАЦИИ ИНФОРМАЦИИ ПОЛЬЗОВАТЕЛЯ\n    saveUserChanges({ name, about }) {\n        return fetch(this._userUrl, {\n            method: 'PATCH',\n            headers: {\n                authorization: this._token,\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                name: name,\n                about: about,\n            })\n        })\n        .then(this._handleResponse)\n    }\n    //--- МЕТОД СМЕНЫ АВАТАРА ПОЛЬЗОВАТЕЛЯ\n    changeAvatar(src) {\n        return fetch(`${this._userUrl}/avatar`, {\n            method: 'PATCH',\n            headers: {\n                authorization: this._token,\n                'Content-Type' : 'application/json'\n            },\n            body: JSON.stringify({\n                avatar: src,\n            })\n        })\n        .then(this._handleResponse)\n    }\n    //--- МЕТОД ПОЛУЧЕНИЯ КАРТОЧЕК С СЕРВЕРА\n    getInitialCards() {\n        return fetch(this._cardsUrl, {\n            headers: {\n                authorization:this._token,\n            }\n        })\n        .then(this._handleResponse)\n    }\n    //--- МЕТОД ПУБЛИКАЦИИ НОВОЙ КАРТОЧКИ \n    postNewCard({ name, link }) {\n        return fetch(this._cardsUrl, {\n            method: 'POST',\n            headers: {\n                authorization: this._token,\n                'Content-Type' : 'application/json'\n            },\n            body: JSON.stringify({\n                name: name,\n                link: link\n            }) \n        })\n        .then(this._handleResponse)\n    }\n    //--- МЕТОД УДАЛЕНИЕ КАРТОЧКИ\n    deleteCard(cardId){\n        return fetch(`${this._cardsUrl}/${cardId}`, {\n            method:'DELETE',\n            headers: {\n                authorization: this._token,\n            }\n        })\n        .then(this._handleResponse)\n    }\n    //--- МЕТОД ЛАЙКА КАРТОЧКИ\n    changeLikeCardStatus(cardId, isNotLiked) {\n        return fetch(`${this._likesUrl}/${cardId}`, {\n            method: isNotLiked ? 'PUT' : 'DELETE',\n            headers: {\n                authorization:this._token,\n            }\n        })\n        .then(this._handleResponse)\n    }\n }\n\nconst api = new Api({\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-45',\n    headers: {\n      authorization: 'fcd67938-a1e9-408c-8c74-faa990c9d125',\n      'Content-Type': 'application/json'\n    }\n  });\n  \n  export default api;"],"mappings":"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"},"metadata":{},"sourceType":"module"}