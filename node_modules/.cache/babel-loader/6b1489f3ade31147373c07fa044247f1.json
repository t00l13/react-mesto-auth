{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useCallback } from 'react';\n\nconst useFormWithValidation = () => {\n  _s();\n\n  const [values, setValues] = React.useState({});\n  const [errors, setErrors] = React.useState({});\n  const [isValid, setIsValid] = React.useState(false);\n\n  function onChange(evt) {\n    const input = evt.target;\n    const name = input.name;\n    const value = input.value;\n    setValues({ ...values,\n      [name]: value\n    });\n    setErrors({ ...errors,\n      [name]: input.validationMessage\n    });\n    setIsValid(input.closest('form').checkValidity());\n  }\n\n  const resetForm = useCallback(function () {\n    let newValues = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let newErrors = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let newIsValid = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    setIsValid(newValues);\n    setErrors(newErrors);\n    setIsValid(newIsValid);\n  }, [setValues, setErrors, setIsValid]);\n  return {\n    values,\n    setValues,\n    errors,\n    isValid,\n    setIsValid,\n    onChange,\n    resetForm\n  };\n};\n\n_s(useFormWithValidation, \"msMIfc7pG71dSFDSlZa7+l3GN6k=\");\n\nexport default useFormWithValidation;","map":{"version":3,"names":["React","useCallback","useFormWithValidation","values","setValues","useState","errors","setErrors","isValid","setIsValid","onChange","evt","input","target","name","value","validationMessage","closest","checkValidity","resetForm","newValues","newErrors","newIsValid"],"sources":["/Users/toolie/dev/mesto-react/src/utils/hooks/useFormWithValidation.js"],"sourcesContent":["import React, {\n    useCallback\n} from 'react';\n\nconst useFormWithValidation = () => {\n    const [values, setValues] = React.useState({});\n    const [errors, setErrors] = React.useState({});\n    const [isValid, setIsValid] = React.useState(false);\n\n    function onChange(evt) {\n        const input = evt.target;\n        const name = input.name;\n        const value = input.value;\n\n        setValues({...values, [name]: value\n        });\n        setErrors({...errors, [name]: input.validationMessage});\n        setIsValid(input.closest('form').checkValidity());\n    }\n\n    const resetForm = useCallback(\n        (newValues = {}, newErrors = {}, newIsValid = false) => {\n            setIsValid(newValues);\n            setErrors(newErrors);\n            setIsValid(newIsValid);\n        },\n        [setValues, setErrors, setIsValid]\n    )\n\n    return {\n        values,\n        setValues,\n        errors,\n        isValid,\n        setIsValid,\n        onChange,\n        resetForm,\n    }\n};\n\nexport default useFormWithValidation;"],"mappings":";;AAAA,OAAOA,KAAP,IACIC,WADJ,QAEO,OAFP;;AAIA,MAAMC,qBAAqB,GAAG,MAAM;EAAA;;EAChC,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,KAAK,CAACK,QAAN,CAAe,EAAf,CAA5B;EACA,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,KAAK,CAACK,QAAN,CAAe,EAAf,CAA5B;EACA,MAAM,CAACG,OAAD,EAAUC,UAAV,IAAwBT,KAAK,CAACK,QAAN,CAAe,KAAf,CAA9B;;EAEA,SAASK,QAAT,CAAkBC,GAAlB,EAAuB;IACnB,MAAMC,KAAK,GAAGD,GAAG,CAACE,MAAlB;IACA,MAAMC,IAAI,GAAGF,KAAK,CAACE,IAAnB;IACA,MAAMC,KAAK,GAAGH,KAAK,CAACG,KAApB;IAEAX,SAAS,CAAC,EAAC,GAAGD,MAAJ;MAAY,CAACW,IAAD,GAAQC;IAApB,CAAD,CAAT;IAEAR,SAAS,CAAC,EAAC,GAAGD,MAAJ;MAAY,CAACQ,IAAD,GAAQF,KAAK,CAACI;IAA1B,CAAD,CAAT;IACAP,UAAU,CAACG,KAAK,CAACK,OAAN,CAAc,MAAd,EAAsBC,aAAtB,EAAD,CAAV;EACH;;EAED,MAAMC,SAAS,GAAGlB,WAAW,CACzB,YAAwD;IAAA,IAAvDmB,SAAuD,uEAA3C,EAA2C;IAAA,IAAvCC,SAAuC,uEAA3B,EAA2B;IAAA,IAAvBC,UAAuB,uEAAV,KAAU;IACpDb,UAAU,CAACW,SAAD,CAAV;IACAb,SAAS,CAACc,SAAD,CAAT;IACAZ,UAAU,CAACa,UAAD,CAAV;EACH,CALwB,EAMzB,CAAClB,SAAD,EAAYG,SAAZ,EAAuBE,UAAvB,CANyB,CAA7B;EASA,OAAO;IACHN,MADG;IAEHC,SAFG;IAGHE,MAHG;IAIHE,OAJG;IAKHC,UALG;IAMHC,QANG;IAOHS;EAPG,CAAP;AASH,CAlCD;;GAAMjB,qB;;AAoCN,eAAeA,qBAAf"},"metadata":{},"sourceType":"module"}